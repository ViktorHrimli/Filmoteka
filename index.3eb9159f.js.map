{"mappings":"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","sources":["src/js/library-JS/data_local_storeg.js","src/js/renderInfoModal.js","src/js/renderTrendTitle.js","src/js/onOpenModal.js","src/index.js"],"sourcesContent":["export default function creteDataLocalSave(data) {\n  const year = new Date(data.release_date).getFullYear();\n  const localSave = {\n    filmsName: data.original_title,\n    filmsImg: data.poster_path,\n    filmRelise: year,\n    filmGanre: data.genres,\n    filmRait: data.vote_average,\n    id: data.id,\n  };\n\n  return localSave;\n}\n","export function renderModal(\n  {\n    poster_path,\n    original_title,\n    overview,\n    popularity,\n    vote_average,\n    vote_count,\n  },\n  genr\n) {\n  return `\n  <div class=\"modal\">\n    <svg class=\"modal--icon\">\n      <use xlink:href=\"./images/sprite.svg#close\"></use>\n    </svg>\n    <div class=\"modal--title\">\n      <div class=\"modal--img\">\n        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\"/>\n      </div>\n      <div class=\"modal--title__info\">\n        <h2 class=\"title--text\">${original_title}</h2>\n        <div class=\"conteiner--modal__list\">\n          <ul class=\"modal--title__list--left\">\n            <li class=\"list--element\">\n              <p>Vote / Votes</p>\n            </li>\n            <li class=\"list--element\">\n              <p>Popularity</p>\n            </li>\n            <li class=\"list--element\">\n              <p>Original Title</p>\n            </li>\n            <li class=\"list--element\">\n              <p>Genre</p>\n            </li>\n          </ul>\n          <ul class=\"modal--title__list--right\">\n            <li class=\"list--element\">\n              <p class=\"element--value\"><span class=\"rait\">${vote_average.toFixed(\n                2\n              )}</span> / ${vote_count.toFixed(2)}</p>\n            </li>\n            <li class=\"list--element\">\n              <p class=\"element--value\">${popularity.toFixed(2)}</p>\n            </li>\n            <li class=\"list--element\">\n              <p class=\"element--value\">${original_title}</p>\n            </li>\n            <li class=\"list--element\">\n              <p class=\"element--value\">${\n                genr.length <= 2 ? [...genr] : [genr[0] + ' ' + genr[1]]\n              }</p>\n            </li>\n          </ul>\n        </div>\n        <div class=\"conteiner--about\">\n          <p>ABOUT</p>\n          <p class=\"about--text\">${overview}</p>\n        </div>\n        <div class=\"conteiner--btn\">\n          <button class=\"btn--modal\" name=\"watched\" data-action=\"add-to-watch\">add to Watched</button>\n          <button class=\"btn--modal\" name=\"queve\" data-action=\"queve\">add to queue</button>\n        </div>\n      </div>\n    </div>\n    </div>\n\n    `;\n}\n","export function renderTrendTitle(\n  {\n    title,\n    poster_path,\n    genre_ids,\n    release_date,\n    vote_average,\n    name,\n    first_air_date,\n    id,\n  },\n  genre\n) {\n  const originalName = findTruName(name, title);\n  const getGenre = findIdGenre(genre_ids, genre);\n  const getOriginalDate = findDate(release_date, first_air_date);\n  return `\n  <li class=\"list--title\">\n          <img name=\"${id}\"   src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${originalName}\" />\n        <div class=\"conteiner--image__title\">\n          <p class=\"image--title\">\n            ${originalName} <br /><span class=\"image--text\">\n              ${getGenre} | ${getOriginalDate}\n            </span>\n            <span class=\"rait\">${vote_average.toFixed(2)}</span>\n          </p>\n        </div>\n      </li>\n    `;\n}\n\nfunction findIdGenre(Ids, genre) {\n  const total = parseInt(Ids.join(' '));\n  let ganreName = '';\n  genre.filter(element => {\n    if (element.id === total) {\n      return (ganreName += element.name);\n    }\n  });\n  return ganreName;\n}\n\nfunction findTruName(name, title) {\n  let originalName = '';\n  if (name) {\n    return (originalName = name);\n  }\n  if (title) {\n    return (originalName = title);\n  }\n}\n\nfunction findDate(releaseDate, airDate) {\n  let originalDate = '';\n  if (releaseDate) {\n    return (originalDate = releaseDate);\n  }\n  if (airDate) {\n    return (originalDate = airDate);\n  }\n}\n","import { refs } from './refs';\nimport { renderModalMovies } from '../index';\nexport function onGetCard(e) {\n  for (let card of refs.title.children) {\n    card.addEventListener('click', onOpenModal);\n  }\n}\n\nexport function onOpenModal(e) {\n  refs.backDrop.classList.remove('is-hidden');\n  refs.backDrop.addEventListener('click', onClickClose);\n  if (!refs.backDrop.classList.contains('is-hidden')) {\n    onEscapeClose();\n  }\n  if (refs.backDrop.classList.contains('is-hidden')) {\n    refs.backDrop.removeEventListener('click', onClickClose);\n  }\n  renderModalMovies(parseInt(e.target.name));\n}\n\nfunction onClickClose(e) {\n  if (e.target.className === 'backdrop') {\n    refs.backDrop.classList.add('is-hidden');\n  }\n}\n\nexport function onEscapeClose() {\n  window.addEventListener('keydown', onCloseModalEscape, { once: true });\n}\n\nfunction onCloseModalEscape(e) {\n  if (e.code === 'Escape') return refs.backDrop.classList.add('is-hidden');\n}\n","import creteDataLocalSave from './js/library-JS/data_local_storeg';\nimport addToWatchLocaleStorage from './js/library-JS/localStor-addToWatch';\nimport {\n  createResponseTitleTrend,\n  getIdsGenres,\n  getIdMovies,\n} from './js/mainCreateRes';\nimport { renderModal } from './js/renderInfoModal';\nimport { renderTrendTitle } from './js/renderTrendTitle';\nimport { onGetCard } from './js/onOpenModal';\nimport { refs } from './js/refs';\n\nlet genr;\nPromise.all([createResponseTitleTrend(), getIdsGenres()]).then(\n  ([\n    {\n      data: { results },\n    },\n    {\n      data: { genres },\n    },\n  ]) => {\n    genr = genres;\n    results.map(movie => {\n      refs.title.insertAdjacentHTML(\n        'afterbegin',\n        renderTrendTitle(movie, genr)\n      );\n    });\n    onGetCard(results);\n  }\n);\nexport function renderModalMovies(query) {\n  let g = [];\n  getIdMovies(query)\n    .then(({ data }) => {\n      data.genres.filter(item => {\n        g.push(item.name);\n        return g;\n      });\n      refs.backDrop.innerHTML = '';\n      refs.backDrop.insertAdjacentHTML('beforeend', renderModal(data, g));\n      // ===========Loc\n\n      const localSave = creteDataLocalSave(data);\n      addToWatchLocaleStorage(localSave);\n    })\n    .catch(console.error);\n}\n\n// =================================\n// console.log(createResponse);\n// function reverseStr(arr1, arr2) {\n//   let total = [];\n//   arr1.forEach(item => {\n//     if (arr2.join(' ').includes(item)) {\n//       total.push(item);\n//       return total;\n//     }\n//     return [];\n//   });\n\n//   return total;\n// }\n\n// const a1 = ['arp', 'live', 'strong'];\n// const a2 = ['lively', 'alive', 'harp', 'sharp', 'armstrong'];\n// const b1 = ['tarp', 'mice', 'bull'];\n// const b2 = ['lively', 'alive', 'harp', 'sharp', 'armstrong'];\n// // returns[('arp', 'live', 'strong')];\n\n// console.log(reverseStr(a1, a2));\n// console.log(reverseStr(b1, b2));\n"],"names":["$f5fd30178e04e002$export$2e2bcd8739ae039","data","year","Date","release_date","getFullYear","filmsName","original_title","filmsImg","poster_path","filmRelise","filmGanre","genres","filmRait","vote_average","id","$42fc6ac5554aafff$export$69bf191433722f78","overview","popularity","vote_count","genr","toFixed","length","$cbe21e0787bec030$export$3e93aa5f49b5d203","title","genre_ids","name","first_air_date","genre","originalName","$cbe21e0787bec030$var$findTruName","getGenre","Ids","total","parseInt","join","ganreName","filter","element","$cbe21e0787bec030$var$findIdGenre","releaseDate","airDate","$cbe21e0787bec030$var$findDate","$krGWQ","parcelRequire","$93393bb850c19d70$export$6bf02933748d023","e","card","refs","children","addEventListener","$93393bb850c19d70$export$256dfc14784e999a","backDrop","classList","remove","$93393bb850c19d70$var$onClickClose","contains","window","$93393bb850c19d70$var$onCloseModalEscape","once","removeEventListener","$1f0dc3b9307be026$export$5ee8c9a32fba41f4","target","className","add","code","$1f0dc3b9307be026$var$genr","query","g","$cjwWu","getIdMovies","then","item","push","innerHTML","insertAdjacentHTML","localSave","$3ZI3M","default","catch","console","error","Promise","all","createResponseTitleTrend","getIdsGenres","results","map","movie"],"version":3,"file":"index.3eb9159f.js.map"}