{"mappings":"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","sources":["src/js/library-JS/data_local_storeg.js","src/js/renderInfoModal.js","src/js/renderTrendTitle.js","src/genres.json","src/js/refs.js","src/js/onOpenModal.js","src/index.js"],"sourcesContent":["export default function creteDataLocalSave(data) {\n  const year = new Date(data.release_date).getFullYear();\n  const localSave = {\n    filmsName: data.original_title,\n    filmsImg: data.poster_path,\n    filmRelise: year,\n    filmGanre: data.genres,\n    filmRait: data.vote_average,\n    id: data.id,\n  };\n\n  return localSave;\n}\n","import { getGenr } from './library-JS/modal-libr';\nexport function renderModal(\n  {\n    poster_path,\n    original_title,\n    overview,\n    popularity,\n    vote_average,\n    vote_count,\n  },\n  genr\n) {\n  const g = getGenr(genr);\n  return `\n  <div class=\"modal\">\n        <svg class=\"modal--icon\"  width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M8 8L22 22\" stroke=\"black\" stroke-width=\"2\"/>\n            <path d=\"M8 22L22 8\" stroke=\"black\" stroke-width=\"2\"/>\n        </svg>\n    <div class=\"modal--title\">\n      <div class=\"modal--img\">\n        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\"/>\n      </div>\n      <div class=\"modal--title__info\">\n        <h2 class=\"title--text\">${original_title}</h2>\n        <div class=\"conteiner--modal__list\">\n          <ul class=\"modal--title__list--left\">\n            <li class=\"list--element\">\n              <p>Vote / Votes</p>\n            </li>\n            <li class=\"list--element\">\n              <p>Popularity</p>\n            </li>\n            <li class=\"list--element\">\n              <p>Original Title</p>\n            </li>\n            <li class=\"list--element\">\n              <p>Genre</p>\n            </li>\n          </ul>\n          <ul class=\"modal--title__list--right\">\n            <li class=\"list--element\">\n              <p class=\"element--value\"><span class=\"rait\">${vote_average.toFixed(\n                2\n              )}</span> / ${vote_count.toFixed(2)}</p>\n            </li>\n            <li class=\"list--element\">\n              <p class=\"element--value\">${popularity.toFixed(2)}</p>\n            </li>\n            <li class=\"list--element\">\n              <p class=\"element--value\">${original_title}</p>\n            </li>\n            <li class=\"list--element\">\n              <p class=\"element--value\">${g}</p>\n            </li>\n          </ul>\n        </div>\n        <div class=\"conteiner--about\">\n          <p>ABOUT</p>\n          <p class=\"about--text\">${overview}</p>\n        </div>\n        <div class=\"conteiner--btn\">\n          <button class=\"btn--modal\" name=\"watched\" data-action=\"add-to-watch\">add to Watched</button>\n          <button class=\"btn--modal\" name=\"queve\" data-action=\"queve\">add to queue</button>\n        </div>\n      </div>\n    </div>\n    </div>\n\n    `;\n}\n","import genre from '../genres.json';\nexport function renderTrendTitle({\n  title,\n  poster_path,\n  genre_ids,\n  release_date,\n  vote_average,\n  name,\n  first_air_date,\n  id,\n}) {\n  const originalName = findTruName(name, title);\n  const getGenre = findIdGenre(genre_ids, genre);\n  const getOriginalDate = findDate(release_date, first_air_date);\n  return `\n  <li class=\"list--title\">\n          <img name=\"${id}\"   src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${originalName}\" />\n        <div class=\"conteiner--image__title\">\n          <p class=\"image--title\">\n            ${originalName} <br />\n            <div class=\"list--ganre_date--conteiner\">\n            <span class=\"image--text\">\n              ${getGenre} | ${getOriginalDate.slice(0, 4)}\n            </span>\n            <span class=\"rait\">${vote_average.toFixed(2)}</span>\n            </div>\n          </p>\n        </div>\n      </li>\n    `;\n}\n\nexport default function findIdGenre(Ids, { genres }) {\n  let g = [];\n  for (let i = 0; i < Ids.length; i += 1) {\n    genres.find(({ id, name }) => {\n      if (id === Ids[i]) {\n        g.push(name);\n      }\n    });\n  }\n  if (g.length > 2) g.splice(2, 3);\n  return g.join(' ');\n}\n\nfunction findTruName(name, title) {\n  let originalName = '';\n  if (name) {\n    return (originalName = name);\n  }\n  if (title) {\n    return (originalName = title);\n  }\n}\n\nfunction findDate(releaseDate, airDate) {\n  let originalDate = '';\n  if (releaseDate) {\n    return (originalDate = releaseDate);\n  }\n  if (airDate) {\n    return (originalDate = airDate);\n  }\n}\n","{\n  \"genres\": [\n    { \"id\": 28, \"name\": \"Action\" },\n    { \"id\": 12, \"name\": \"Adventure\" },\n    { \"id\": 16, \"name\": \"Animation\" },\n    { \"id\": 35, \"name\": \"Comedy\" },\n    { \"id\": 80, \"name\": \"Crime\" },\n    { \"id\": 99, \"name\": \"Documentary\" },\n    { \"id\": 18, \"name\": \"Drama\" },\n    { \"id\": 10751, \"name\": \"Family\" },\n    { \"id\": 14, \"name\": \"Fantasy\" },\n    { \"id\": 36, \"name\": \"History\" },\n    { \"id\": 27, \"name\": \"Horror\" },\n    { \"id\": 10402, \"name\": \"Music\" },\n    { \"id\": 9648, \"name\": \"Mystery\" },\n    { \"id\": 10749, \"name\": \"Romance\" },\n    { \"id\": 878, \"name\": \"Science Fiction\" },\n    { \"id\": 10770, \"name\": \"TV Movie\" },\n    { \"id\": 53, \"name\": \"Thriller\" },\n    { \"id\": 10752, \"name\": \"War\" },\n    { \"id\": 37, \"name\": \"Western\" }\n  ]\n}\n","export const refs = {\n  title: document.querySelector('#titel-list'),\n  titleLib: document.querySelector('#titel-list-lib'),\n  backDrop: document.querySelector('.backdrop'),\n  btnAddWatched: document.querySelector(\n    'button[data-action=\"add-to-watched-lib\"]'\n  ),\n  btnQueve: document.querySelector('button[data-action=\"queve-lib\"]'),\n};\n","import { refs } from './refs';\nimport { renderModalMovies } from '../index';\nexport function onGetCard(e) {\n  for (let card of refs.title.children) {\n    card.addEventListener('click', onOpenModal);\n  }\n}\n\nexport function onOpenModal(e) {\n  refs.backDrop.classList.remove('is-hidden');\n  refs.backDrop.addEventListener('click', onClickClose);\n  if (!refs.backDrop.classList.contains('is-hidden')) {\n    onEscapeClose();\n  }\n  if (refs.backDrop.classList.contains('is-hidden')) {\n    refs.backDrop.removeEventListener('click', onClickClose);\n  }\n  renderModalMovies(parseInt(e.target.name));\n}\n\nfunction onClickClose(e) {\n  if (e.target.className === 'backdrop') {\n    refs.backDrop.classList.add('is-hidden');\n  }\n}\n\nexport function onEscapeClose() {\n  window.addEventListener('keydown', onCloseModalEscape, { once: true });\n}\n\nfunction onCloseModalEscape(e) {\n  if (e.code === 'Escape') return refs.backDrop.classList.add('is-hidden');\n}\n","import creteDataLocalSave from './js/library-JS/data_local_storeg';\nimport addToWatchLocaleStorage from './js/library-JS/localStor-addToWatch';\nimport {\n  createResponseTitleTrend,\n  getIdsGenres,\n  getIdMovies,\n} from './js/mainCreateRes';\nimport { renderModal } from './js/renderInfoModal';\nimport { renderTrendTitle } from './js/renderTrendTitle';\nimport { onGetCard } from './js/onOpenModal';\nimport { refs } from './js/refs';\n\ncreateResponseTitleTrend().then(({ data: { results } }) => {\n  results.map(movie => {\n    refs.title.insertAdjacentHTML('afterbegin', renderTrendTitle(movie));\n  });\n  onGetCard(results);\n});\n\nexport function renderModalMovies(query) {\n  let g = [];\n  getIdMovies(query)\n    .then(({ data }) => {\n      data.genres.filter(item => {\n        g.push(item.name);\n        return g;\n      });\n      refs.backDrop.innerHTML = '';\n      refs.backDrop.insertAdjacentHTML('beforeend', renderModal(data, g));\n      // ===========Loc\n      addToWatchLocaleStorage(creteDataLocalSave(data));\n    })\n    .catch(console.error);\n}\n\n// =================================\n// console.log(createResponse);\n// function reverseStr(arr1, arr2) {\n//   let total = [];\n//   arr1.forEach(item => {\n//     if (arr2.join(' ').includes(item)) {\n//       total.push(item);\n//       return total;\n//     }\n//     return [];\n//   });\n\n//   return total;\n// }\n\n// const a1 = ['arp', 'live', 'strong'];\n// const a2 = ['lively', 'alive', 'harp', 'sharp', 'armstrong'];\n// const b1 = ['tarp', 'mice', 'bull'];\n// const b2 = ['lively', 'alive', 'harp', 'sharp', 'armstrong'];\n// // returns[('arp', 'live', 'strong')];\n\n// console.log(reverseStr(a1, a2));\n// console.log(reverseStr(b1, b2));\n"],"names":["$7b4adeca245ad88f$export$2e2bcd8739ae039","data","year","Date","release_date","getFullYear","filmsName","original_title","filmsImg","poster_path","filmRelise","filmGanre","genres","filmRait","vote_average","id","$gQM3s","parcelRequire","$6bdaf2af8e7bd1c7$export$69bf191433722f78","param","genr","overview","popularity","vote_count","g","getGenr","concat","toFixed","$ba62a6c77a41d6a0$export$3e93aa5f49b5d203","title","genre_ids","name","first_air_date","originalName","$ba62a6c77a41d6a0$var$findTruName","getGenre","Ids","param1","find","i","push","i1","length","_loop","splice","join","$ba62a6c77a41d6a0$export$2e2bcd8739ae039","$parcel$interopDefault","$b764a922f00d3234$exports","getOriginalDate","releaseDate","airDate","$ba62a6c77a41d6a0$var$findDate","slice","JSON","parse","$37e33676934ad046$export$21666b427502ea6d","document","querySelector","titleLib","backDrop","btnAddWatched","btnQueve","$3e6386e69ae68f48$export$6bf02933748d023","e","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","children","Symbol","iterator","next","done","value","addEventListener","$3e6386e69ae68f48$export$256dfc14784e999a","err","return","query","classList","remove","$3e6386e69ae68f48$var$onClickClose","contains","window","$3e6386e69ae68f48$var$onCloseModalEscape","once","removeEventListener","parseInt","target","$gbT2k","getIdMovies","then","filter","item","innerHTML","insertAdjacentHTML","$fpFLL","default","catch","console","error","className","add","code","createResponseTitleTrend","results","map","movie"],"version":3,"file":"index.69d15810.js.map"}